// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   
  expiresAt DateTime
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  is_admin Boolean @default(false)
  fname    String
  lname    String
  alias    String
  password String 
  sentMessages     Messages[] @relation("sentMessages")
  receivedMessages Messages[] @relation("receivedMessages")

  ChatMessage ChatMessage[]
}

model Messages {
  id       Int      @id @default(autoincrement())
  senderId  Int
  receiverId Int
  content   String
  timestamp DateTime @default(now())
  
  sender    User     @relation("sentMessages", fields: [senderId], references: [id])
  receiver  User     @relation("receivedMessages", fields: [receiverId], references: [id])
}

model ChatRoom {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  messages  ChatMessage[]
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  chatRoomId Int
  senderId   Int
  content    String
  timestamp  DateTime @default(now())
  
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  sender     User     @relation(fields: [senderId], references: [id])
}

